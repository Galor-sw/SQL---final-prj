create database hotel_orders;
SET GLOBAL log_bin_trust_function_creators = 1; /* this function called because i didnt success to make function call*/

/* query's 1-7 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/* 1 */
select room_id, rs.description from rooms inner join room_status rs where rooms.status_id = rs.room_status_id;
/* 2 */
select room_id, times_ordered from rooms order by times_ordered DESC limit 10;
/* 3 */
select * from order_list Where order_time > CURDATE() - INTERVAL 2 week;
/* 4 */
select c.crew_id, c.first_name, c.last_name, t.cleanings_count
from crew c 
join cleaning_count t 
where c.crew_id = t.cleaner_id 
order by t.cleanings_count DESC limit 1;
/* 5 */
select * from clients;
select ord.order_number, ord.client_id, cli.first_name, cli.last_name , ord.check_out from order_list ord inner join clients cli where ord.client_id = cli.client_id and ord.check_out > CURRENT_DATE();
/* 6 */
select client_id, first_name, last_name, times_ordered from clients where times_ordered > 1;
/* 7 */
select * from order_list;
select DATE_FORMAT(`check_out`, '%M') month, sum(price) income from order_list group by DATE_FORMAT(`check_out`, '%M') ;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `calculate_month_income`(IN month_identify INT)
BEGIN
select sum(price) as sum from order_list where MONTH(check_in) = month_identify;
END$$
DELIMITER ;

call calculate_month_income(9);

/* rooms ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
drop table rooms;
select * from rooms;

CREATE TABLE `rooms` (
  `room_id` int NOT NULL AUTO_INCREMENT,
  `room_type` int NOT NULL,
  `room_location` int NOT NULL,
  `status_id` int NOT NULL default (1),
  `times_ordered` int NOT NULL default (0),
  `last_status_update` datetime NOT NULL DEFAULT (now()),
  PRIMARY KEY (`room_id`),
  CONSTRAINT `order_list_ibfk_1` FOREIGN KEY (`room_type`) REFERENCES `room_type` (`room_type_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `order_list_ibfk_2` FOREIGN KEY (`room_location`) REFERENCES `room_location` (`location_id`) ON DELETE CASCADE ON UPDATE CASCADE
);

/* triggers -------------------*/
DELIMITER &&
create trigger upd_status before update on rooms for each row 
begin 
if (old.status_id != new.status_id)
then set new.last_status_update = now();
end if;
end &&
DELIMITER ;

/*insert data ------------------*/
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,7);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,7);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,7);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,7);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,7);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,9);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,9);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,9);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,9);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (1,9);
/*extend*/
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,7);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,7);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,7);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,7);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,7);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,8);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,9);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,9);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,9);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,9);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (2,9);
/*suites*/
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (4,1);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (4,1);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (4,1);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (4,2);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (4,2);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (4,2);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (5,3);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (5,3);
/*exclusive*/
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (3,4);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (3,4);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (3,4);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (3,5);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (3,5);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (3,5);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (3,6);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (3,6);
INSERT INTO `hotel_orders`.`rooms` (`room_type` ,`room_location`) VALUES (3,6);
-- -------------------------------------------------------------------------------------------------------

drop table room_location;
select * from room_location;

CREATE TABLE `room_location` (
  `location_id` int NOT NULL auto_increment,
  `building_name` VARCHAR(25) NOT NULL,
  `floor` int NOT NULL,
  PRIMARY KEY (`location_id`)
);
insert into `room_location` (`building_name`, `floor`) VALUES ('alon', 1);
insert into `room_location` (`building_name`, `floor`) VALUES ('alon', 2);
insert into `room_location` (`building_name`, `floor`) VALUES ('alon', 3);
insert into `room_location` (`building_name`, `floor`) VALUES ('dekel', 1);
insert into `room_location` (`building_name`, `floor`) VALUES ('dekel', 2);
insert into `room_location` (`building_name`, `floor`) VALUES ('dekel', 3);
insert into `room_location` (`building_name`, `floor`) VALUES ('tamar', 1);
insert into `room_location` (`building_name`, `floor`) VALUES ('tamar', 2);
insert into `room_location` (`building_name`, `floor`) VALUES ('tamar', 3);

-- -------------------------------------------------------------------------------------------------------

drop table room_type;
select * from room_type;

CREATE TABLE `room_type` (
  `room_type_id` int NOT NULL auto_increment,
  `description` varchar(25) DEFAULT NULL,
  `num_of_bed` int NOT NULL,
  `price` INT NOT NULL,
  PRIMARY KEY (`room_type_id`)
);
insert into room_type (`description`, `num_of_bed`,`price`) values ('normal', 2, 500);
insert into room_type (`description`, `num_of_bed`,`price`) values ('normal - extand', 3, 750);
insert into room_type (`description`, `num_of_bed`,`price`) values ('exclusive', 4, 1000);
insert into room_type (`description`, `num_of_bed`,`price`) values ('suite', 5, 2500);
insert into room_type (`description`, `num_of_bed`,`price`) values ('suite - premium', 7, 3500);

-- -------------------------------------------------------------------------------------------------------
drop table room_status;
select * from room_status;
CREATE TABLE `room_status` (
  `room_status_id` int NOT NULL auto_increment,
  `description` varchar(25) DEFAULT NULL,
  PRIMARY KEY (`room_status_id`)
);
insert into room_status (`description`) values ('empty and clean');
insert into room_status (`description`) values ('in use');
insert into room_status (`description`) values ('empt - ready to clean');
insert into room_status (`description`) values ('cleaning process');
insert into room_status (`description`) values ('ordered');
delete from room_status where room_status_id = 1;

/* orders ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
drop table order_list;
select * from order_list;
select * from rooms;

CREATE TABLE `order_list` (
  `order_number` int NOT NULL AUTO_INCREMENT,
  `room_number` int NOT NULL,
  `client_id` int NOT NULL,
  `days_ordered` int NOT NULL default (0),
  `check_in` datetime NOT NULL,
  `check_out` datetime NOT NULL,
  `order_time` datetime NOT NULL DEFAULT (now()),
  `reciption_id` int NOT NULL,
  `price` INT NOT NULL DEFAULT (0),
  `is_active` BOOLEAN NOT NULL DEFAULT (0),
  PRIMARY KEY (`order_number`),
  CONSTRAINT `cleaning_history_ibfk_5` FOREIGN KEY (`room_number`) REFERENCES `rooms` (`room_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `cleaning_history_ibfk_6` FOREIGN KEY (`reciption_id`) REFERENCES `crew` (`crew_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `cleaning_history_ibfk_7` FOREIGN KEY (`client_id`) REFERENCES `clients` (`client_id`) ON DELETE CASCADE ON UPDATE CASCADE
);
/* triggers ---------------------------------------------------------*/
drop trigger set_price;
DELIMITER &&
create trigger set_price before insert on order_list
for each row
begin
set new.days_ordered = (SELECT DATEDIFF(new.check_out,new.check_in));
set new.price = (new.days_ordered * (select price from room_type where room_type_id = (select room_type from rooms where new.room_number = room_id)));
END&&
DELIMITER ;
-- --------------------------------------------------------------------
DELIMITER &&
create trigger update_room_status after insert on order_list for each row 
begin
        call update_room_status_after_order (new.room_number, new.client_id);
end&&
DELIMITER ;
drop trigger update_room_status;
-- --------------------------------------------------------------------
drop trigger check_room_available;
DELIMITER &&
CREATE TRIGGER check_room_available BEFORE INSERT ON order_list
FOR EACH ROW
BEGIN
IF((select status_id from rooms where new.room_number = room_id) = 2) THEN
SIGNAL SQLSTATE '45000'
SET MESSAGE_TEXT = 'this room is already in use';
END IF;
END &&
delimiter ;
/* insert data -------------------------------------------------*/
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (3,1 ,'2021-06-09','2021-6-10',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (3,2 ,'2021-07-05','2021-7-09',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (3,3 ,'2021-03-04','2021-3-10',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (4,3 ,'2021-06-03','2021-11-03',2,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (5,4 ,'2021-11-02','2021-11-02',3,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (6,5 ,'2021-30-04','2021-3-09',4,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (3,5 ,'2021-04-01','2021-4-010',5,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (5,1 ,'2021-03-14','2021-3-19',4,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (4,7 ,'2021-01-15','2021-01-20',4,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (3,10 ,'2021-08-20','2020-08-25',5,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (3,10 ,'2020-09-13','2020-09-17',0,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (17,1 ,'2020-12-01','2020-12-09',11,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (35,2 ,'2020-11-11','2020-11-15',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (16,2 ,'2020-08-05','2020-08-09',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (23,5 ,'2020-05-16','2020-05-19',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (33,6 ,'2020-08-20','2020-08-25',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (32,7 ,'2020-04-17','2020-04-21',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (22,8 ,'2020-04-01','2020-04-04',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (6,4,'2020-01-15','2020-01-20',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (21,1 ,'2020-01-11','2020-01-28',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (5,1 ,'2020-09-03','2020-09-09',1,  true);
INSERT INTO `hotel_orders`.`order_list` (`room_number`,`client_id`,`check_in`, `check_out`,`reciption_id`,`is_active`) VALUES (23,1 ,'2020-09-09','2020-09-16',1,  true);

-- -------------------------------------------------------------------------------------------------------

select * from clients;
select * from room_status;

drop table check_in_and_out_operations;
select * from check_in_and_out_operations;

create table check_in_and_out_operations (
serial_number INT auto_increment PRIMARY KEY NOT NULL,
oreder_number INT NOT NULL,
reciption_id INT NOT NULL,
operation INT NOT NULL,
time DATE NOT NULL default (now()),
CONSTRAINT foreign key (`oreder_number`) references `order_list` (`order_number`) ON UPDATE CASCADE,
CONSTRAINT foreign key (`reciption_id`) references `crew` (`crew_id`) ON UPDATE CASCADE,
CONSTRAINT foreign key (`operation`) references `operations` (`operation_id`) ON UPDATE CASCADE
);
select * from check_in_and_out_operations;
/* insert by procedure call */

-- -------------------------------------------------------------------------------------------------------

drop table operations;
select * from operations;
create table operations (
operation_id INT auto_increment PRIMARY KEY NOT NULL,
operation_describe VARCHAR(25) NOT NULL
);
insert into operations (`operation_describe`) value ('check_in');
insert into operations (`operation_describe`) value ('check_out');


/* cleanings  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
select * from cleaning_history;
drop table cleaning_history;

select * from rooms;
CREATE TABLE `cleaning_history` (
  `serial_number` int NOT NULL AUTO_INCREMENT,
  `room_id` int NOT NULL,
  `cleaner_ID` int NOT NULL,
  `process` INT NOT NULL,
  `time` datetime NOT NULL DEFAULT (now()),
  PRIMARY KEY (`serial_number`),
  KEY `room_id` (`room_id`),
  KEY `cleaner_ID` (`cleaner_ID`),
  CONSTRAINT `cleaning_history_ibfk_1` FOREIGN KEY (`room_id`) REFERENCES `rooms` (`room_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `cleaning_history_ibfk_2` FOREIGN KEY (`cleaner_ID`) REFERENCES `crew` (`crew_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `cleaning_history_ibfk_3` FOREIGN KEY (`process`) REFERENCES `process_description` (`process_id`) ON DELETE CASCADE ON UPDATE CASCADE
);
/* triggers -----------------------*/
drop trigger inc_cleaning_count_and_update_status;
DELIMITER &&
create trigger inc_cleaning_count_and_update_status after insert on cleaning_history for each row 
begin
        call update_status_while_cleaning_process(new.room_id, new.cleaner_ID, new.process);
end&&
DELIMITER ;


-- -----------------------------------------------

drop trigger check_is_cleaner;
DELIMITER &&
CREATE TRIGGER check_is_cleaner BEFORE INSERT ON cleaning_history
FOR EACH ROW
BEGIN
IF((select title from crew where new.cleaner_ID = crew_id)!= 2) THEN
SIGNAL SQLSTATE '45000'
SET MESSAGE_TEXT = 'this row was insert by NOT cleaner';
END IF;
END &&
delimiter ;
select * from crew;

/* insert data -----------------------*/
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (1, 11,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 10,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 7,1);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 7,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 7,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 5,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 3,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 3,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 3,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 11,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 5,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 11,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 5,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 7,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 7,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 7,2);
INSERT INTO `hotel_orders`.`cleaning_history` (`room_id`,`cleaner_ID`, `process`) VALUES (3, 7,2);

-- -------------------------------------------------------------------------------------------------------

select * from crew;

drop table cleaning_count;
select * from cleaning_count;
CREATE TABLE `cleaning_count` (
  `cleaner_id` int NOT NULL,
  `cleanings_count` int DEFAULT (0),
  PRIMARY KEY (`cleaner_id`),
  CONSTRAINT `cleaning_count_ibfk_1` FOREIGN KEY (`cleaner_id`) REFERENCES `crew` (`crew_id`) ON DELETE CASCADE ON UPDATE CASCADE
);

-- -------------------------------------------------------------------------------------------------------

drop table process_description;
select * from  process_description;
create table `process_description`  (
process_id int NOT NULL AUTO_INCREMENT PRIMARY KEY,
description VARCHAR(25) NOT NULL
);
insert into process_description (`description`) value ('start cleaning');
insert into process_description (`description`) value ('finished cleaning');


/* crew  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
select * from crew;
drop table crew;
CREATE TABLE `crew` (
  `crew_id` int NOT NULL AUTO_INCREMENT,
  `first_name` varchar(25) NOT NULL,
  `last_name` varchar(25) NOT NULL,
  `phone` int NOT NULL,
  `city_id` int NOT NULL,
  `street_id` int NOT NULL,
  `home_number` int NOT NULL,
  `title` int NOT NULL,
  PRIMARY KEY (`crew_id`),
  KEY `title` (`title`),
  KEY `city_id` (`city_id`),
  CONSTRAINT `crew_ibfk_1` FOREIGN KEY (`title`) REFERENCES `crew_title` (`title_id`) ON UPDATE CASCADE,
  CONSTRAINT `crew_ibfk_2` FOREIGN KEY (`city_id`) REFERENCES `cities` (`city_id`) ON UPDATE CASCADE,
  CONSTRAINT `crew_ibfk_3` FOREIGN KEY (`street_id`) REFERENCES `streets` (`street_id`) ON UPDATE CASCADE
);
/* triggers -----------------------*/

drop trigger add_cleaner_to_cleaning_count;
DELIMITER &&
create trigger add_cleaner_to_cleaning_count after insert on crew for each row
begin
if (new.title = 2)
then
insert into cleaning_count (`cleaner_id`) value (new.crew_id);
end if;
end&&
DELIMITER ;

/* insert data -----------------------*/


INSERT INTO `hotel_orders`.`crew` (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`,`title`) VALUES ('yoav','miron','0508984628',1,4,22,1);
INSERT INTO `hotel_orders`.`crew` (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`,`title`) VALUES ('david','mayor','0508984628',6,8,12,1);
INSERT INTO `hotel_orders`.`crew` (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`,`title`) VALUES ('shimrit','biton','0569712583',6,10,6,2);
INSERT INTO `hotel_orders`.`crew` (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`,`title`) VALUES ('dennis','pachor','0549237585',2,3,7,1);
INSERT INTO `hotel_orders`.`crew` (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`,`title`) VALUES ('lior','levi','0587996875',1,5,17,2);
INSERT INTO `hotel_orders`.`crew` (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`,`title`) VALUES ('shani','tzedek','0548337967',8,7,81,1);
INSERT INTO `hotel_orders`.`crew` (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`,`title`) VALUES ('tamir','molcho','0598779369',6,5,62,2);
INSERT INTO `hotel_orders`.`crew` (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`,`title`) VALUES ('asaf','fabrik','0504050602',9,1,13,1);
INSERT INTO `hotel_orders`.`crew` (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`,`title`) VALUES ('ronen','amid','0504050602',10,2,131,1);
INSERT INTO `hotel_orders`.`crew` (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`,`title`) VALUES ('michal','cohen','0504050602',2,1,20,2);
INSERT INTO `hotel_orders`.`crew` (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`,`title`) VALUES ('miri','strugo','0504050602',3,6,8,2);
select * from cleaning_count;

-- -------------------------------------------------------------------------------------------------------

drop table crew_title;

select * from crew_title;
CREATE TABLE `crew_title` (
  `title_id` int NOT NULL auto_increment,
  `description` varchar(25) NOT NULL,
  PRIMARY KEY (`title_id`)
);
insert into crew_title (`description`) value ('reciption');
insert into crew_title (`description`) value ('cleaner');

/* addresses ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
drop table streets;
select * from streets;
CREATE TABLE `streets` (
  `street_id` int NOT NULL auto_increment,
  `address` varchar(25) NOT NULL,
  PRIMARY KEY (`street_id`)
);
insert into streets (address) value ('Menahem begin');
insert into streets (address) value ('Dizingof');
insert into streets (address) value ('Hashalom');
insert into streets (address) value ('Betzalel');
insert into streets (address) value ('Bugrashov');
insert into streets (address) value ('Terner');
insert into streets (address) value ('Alenbi');
insert into streets (address) value ('Ben yehuda');
insert into streets (address) value ('Hes');
insert into streets (address) value ('Pinkas');
insert into streets (address) value ('Herut');

-- -------------------------------------------------------------------------------------------------------


drop table cities;
select * from cities;
CREATE TABLE `cities` (
  `city_id` int NOT NULL auto_increment,
  `city_name` varchar(25) NOT NULL,
  PRIMARY KEY (`city_id`)
);
insert into cities (`city_name`) value ('Tel-aviv');
insert into cities (`city_name`) value ('Holon');
insert into cities (`city_name`) value ('Bat-yam');
insert into cities (`city_name`) value ('Ramat-gan');
insert into cities (`city_name`) value ('Herzliya');
insert into cities (`city_name`) value ('Ramat-hasharon');
insert into cities (`city_name`) value ('Yafo');
insert into cities (`city_name`) value ('Yahud');
insert into cities (`city_name`) value ('Natanya');
insert into cities (`city_name`) value ('Haifa');
/* clients ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
select * from clients;
drop table clients;
CREATE TABLE `clients` (
  `client_id` int NOT NULL AUTO_INCREMENT,
  `first_name` varchar(25) NOT NULL,
  `last_name` varchar(25) NOT NULL,
  `phone` int NOT NULL,
  `city_id` int NOT NULL,
  `street_id` int NOT NULL,
  `home_number` int NOT NULL,
  `times_ordered` int NOT NULL default (0),
  PRIMARY KEY (`client_id`),
  KEY `city_id` (`city_id`),
  CONSTRAINT `client_ibfk_1` FOREIGN KEY (`city_id`) REFERENCES `cities` (`city_id`) ON UPDATE CASCADE,
  CONSTRAINT `client_ibfk_2` FOREIGN KEY (`street_id`) REFERENCES `streets` (`street_id`) ON UPDATE CASCADE
);
insert into clients (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`) value ('nir', 'david', '0583627164', 1, 3, 3);
insert into clients (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`) value ('lior', 'maymon', '0509576320', 3, 5, 9);
insert into clients (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`) value ('den', 'alin', '0502478123', 2, 1, 1);
insert into clients (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`) value ('mati', 'hamid', '0545715896', 4, 2, 2);
insert into clients (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`) value ('noam', 'lery', '0583627164', 7, 8, 9);
insert into clients (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`) value ('or', 'lerer', '0524985561', 9, 1, 16);
insert into clients (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`) value ('ravit', 'amsalem', '0546578124', 10, 2, 22);
insert into clients (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`) value ('shoval', 'nachmani', '0523574910', 5, 5, 5);
insert into clients (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`) value ('rotem', 'yahalom', '0533410201', 2, 10, 20);
insert into clients (`first_name`,`last_name`,`phone`,`city_id`,`street_id`,`home_number`) value ('dor', 'sarid', '0554982364', 6, 6, 6);



/* function ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
drop function room_status_function;
delimiter && 
CREATE FUNCTION room_status_function ( room_number INT)         
    RETURNS varchar(25)
    BEGIN 
	declare answer_status varchar(25) default null;
   select description into answer_status from rooms ro join room_status sta where room_id = room_number and ro.status_id = sta.room_status_id;

    RETURN answer_status;
    end &&
delimiter ;

/* insert room number to check its status */
select room_status_function(5) as room_status;

/* PROCEDURE ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/* 1 */

DELIMITER $$
CREATE PROCEDURE `update_status_while_cleaning_process`(IN room_number INT, crew_number int, process int)
BEGIN
if(process = 2)
then
update cleaning_count set cleanings_count = cleanings_count+1 where
crew_number = cleaning_count.cleaner_id;
update rooms set rooms.status_id = 1 where room_number = rooms.room_id; /* set room status to clean*/
else 
update rooms set rooms.status_id = 4 where room_number = rooms.room_id; /* set room status to cleaning process*/
end if;
END$$
DELIMITER ;

-- -------------------------------------------------------------------------------------------------------

select * from client;
/* 2 */
drop procedure update_room_status_after_order;
DELIMITER $$
CREATE PROCEDURE `update_room_status_after_order`(IN room_number INT, client_number INT)
BEGIN

update rooms set status_id = 5 where room_number = room_id;
update rooms set times_ordered = times_ordered +1 where room_number = room_id;
update clients set times_ordered = times_ordered +1 where client_number = client_id;
END$$
DELIMITER ;
-- -------------------------------------------------------------------------------------------------------

/* 3 */
DELIMITER $$
CREATE PROCEDURE `check_out_procedure`(IN order_number1 INT, reciption_id1 INT)
BEGIN
insert into check_in_and_out_operations (`oreder_number`,`reciption_id`,`operation`) value (order_number1, reciption_id1, 2);
update order_list set is_active = false where order_number = order_number1;
update rooms set status_id = 3 where room_id = (select room_id from order_list where order_number = order_number1);
END$$
DELIMITER ;
select * from rooms;
select * from order_list;
call check_out_procedure (10, 1);


drop procedure check_in_procedure;
DELIMITER $$
CREATE PROCEDURE `check_in_procedure`(IN order_number1 INT, reciption_id1 INT)
BEGIN
insert into check_in_and_out_operations (`oreder_number`,`reciption_id`,`operation`) value (order_number1, reciption_id1, 1);
update rooms set status_id = 2 where room_id = (select room_id from order_list where order_number = order_number1);
END$$
DELIMITER ;

call check_in_procedure (10, 1);




/* https://drive.google.com/file/d/1BX2NX4mY8mLI1AXQeweMWvSIynj0zdvG/view?usp=sharing*/